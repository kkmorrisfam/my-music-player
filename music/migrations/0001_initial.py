# Generated by Django 5.2.6 on 2025-09-21 03:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cover', models.FileField(default='album_img/fallback.webp', upload_to='album_img/')),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlbumTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('track_number', models.PositiveSmallIntegerField(default=0)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album')),
            ],
            options={
                'ordering': ['track_number', 'id'],
            },
        ),
        migrations.CreateModel(
            name='AlbumArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.artist')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('album', 'artist')},
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artists',
            field=models.ManyToManyField(blank=True, related_name='albums', through='music.AlbumArtist', to='music.artist'),
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('audio', models.FileField(upload_to='tracks/')),
                ('albums', models.ManyToManyField(blank=True, related_name='tracks', through='music.AlbumTrack', to='music.album')),
                ('categories', models.ManyToManyField(blank=True, related_name='tracks', to='music.category')),
            ],
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveSmallIntegerField(default=0)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.playlist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track')),
            ],
            options={
                'ordering': ['position', 'id'],
                'unique_together': {('playlist', 'track')},
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(related_name='in_playlists', through='music.PlaylistTrack', to='music.track'),
        ),
        migrations.AddField(
            model_name='albumtrack',
            name='track',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track'),
        ),
        migrations.CreateModel(
            name='TrackArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('primary', 'Primary'), ('featured', 'Featured')], default='primary', max_length=20)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.artist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.track')),
            ],
            options={
                'ordering': ['order', 'id'],
                'unique_together': {('track', 'artist')},
            },
        ),
        migrations.AddField(
            model_name='track',
            name='artists',
            field=models.ManyToManyField(blank=True, related_name='tracks', through='music.TrackArtist', to='music.artist'),
        ),
        migrations.AlterUniqueTogether(
            name='playlist',
            unique_together={('owner', 'name')},
        ),
        migrations.CreateModel(
            name='PlayHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plays', to='music.track')),
            ],
            options={
                'ordering': ['-played_at'],
                'indexes': [models.Index(fields=['user', '-played_at'], name='music_playh_user_id_5396b0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL)),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_by', to='music.track')),
            ],
            options={
                'unique_together': {('user', 'track')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='albumtrack',
            unique_together={('album', 'track')},
        ),
    ]
